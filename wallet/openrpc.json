{
	"openrpc": "1.2.6",
	"info": {
		"title": "Monero Wallet RPC",
		"description": "JSON-RPC API for interacting with monero-wallet-rpc. The program monero-wallet-rpc replaced the rpc interface that was in simplewallet and then monero-wallet-cli. Like monero daemon, if authentication has been setup, user have to make sure to send the username and credentials in the `Authorization` HTTP Header.\n\nNote: *\"atomic units\"* refer to the smallest fraction of monero according to the monerod implementation. **1 XMR = 1e12 [atomic units](https://www.getmonero.org/resources/moneropedia/atomic-units.html).**",
		"license": {
			"name": "MIT License",
			"url": "https://opensource.org/licenses/mit-license.php"
		},
		"version": "v1.27",
		"x-wallet-rpc-version": {
			"major":1,
			"minor":27
		}
	},
	"servers": [
		{
			"url": "http://{host}:{port}/json_rpc",
			"name": "Monero Wallet address",
			"summary": "Address of the monero-wallet-rpc to interact with"
		}
	],
	"components": {
		"tags": {
			"restricted": {
				"name":"Restricted",
				"description":"This method is disabled if monero-wallet-rpc is set to restrict its RPC. Using this method on a restricted wallet will return an explicit error message"
			},
			"sensitive": {
				"name":"Sensitive",
				"description":"This method is disabled if the node isn't trusted. Using this method on an untrusted node causes privacy or security risks to the user's wallet"
			}
		},
		"schemas": {
			"GetBalanceResponse":{
				"type":"object",
				"properties": {
					"balance":{
						"type":"integer",
						"minimum":0,
						"description":"Total account's balance, in atomic units"
					},
					"unlocked_balance":{
						"type":"integer",
						"minimum":0,
						"description":"Unlocked account's balance, in atomic units"
					},
					"multisig_import_needed":{
						"type":"boolean",
						"description":"If `true`, this means the wallet-rpc require importing multisig shard to properly returning the account's balance"
					},
					"per_subaddress":{
						"type":"array",
						"items":{
							"$ref":"#/components/schemas/PerSubaddressInfo"
						}
					},
					"time_to_unlock":{
						"type":"integer",
						"minimum":0,
						"description":"Time (in seconds) before balance is safe to spend."
					},
					"blocks_to_unlock":{
						"type":"integer",
						"minimum":0,
						"description":"Number of blocks before balance is safe to spend (10 blocks after the youngest output)"
					}
				}
			},
			"PerSubaddressInfo":{
				"type":"object",
				"properties":{
					"account_index":{
						"type":"integer",
						"minimum":0,
						"description":"Index of the account."
					},
					"address_index":{
						"type":"integer",
						"minimum":0,
						"description":"Index of the subaddress in the account."
					},
					"address":{
						"type":"string",
						"description":"The subaddress. Representation of the public key in base58"
					},
					"balance":{
						"type":"integer",
						"minimum":0,
						"description":"Total Balance for the subaddress"
					},
					"unlocked_balance":{
						"type":"integer",
						"minimum":0,
						"description":"Unlocked balance for the subaddress"
					},
					"label":{
						"type":"string",
						"description":"Label for the subaddress"
					},
					"num_unspent_outputs":{
						"type":"integer",
						"minimum":0,
						"description":"Number of unspent outputs"
					},
					"blocks_to_unlock":{
						"type":"integer",
						"minimum":0,
						"description":"Number of blocks before subaddress's balance is safe to spend (10 blocks after its youngest output)"
					},
					"time_to_unlock":{
						"type":"integer",
						"minimum":0,
						"description":"Time (in seconds) before subaddress's balance is safe to spend. (~ `blocks_to_unlock` // 120)"
					}
				}
			}
		}
	},
	"methods": [
		{
			"name":"set_daemon",
			"tags":[
				{
					"$ref":"#/components/tags/restricted"
				}
			],
			"description":"Initiate RPC server connection to a Monero daemon.",
			"paramStructure":"by-name",
			"params": [
				{
					"name":"address",
					"required":true,
					"description":"The URL of the daemon to connect to. If not set, monero-wallet-rpc will return an error",
					"schema":{
						"type":"string"
					}
				},
				{
					"name":"trusted",
					"required":false,
					"description":"Indicate to monero-wallet-rpc if it is authorized to use sensitive methods. If set to `false`, these sensitive methods will be disabled (Default: `false`)",
					"schema":{
						"type":"boolean"
					}
				},
				{
					"name":"ssl_support",
					"required":false,
					"description":"Set TLS usage for the node. accepted values: `disabled`|`enabled`|`autodetect` (Default is `autodetect`)",
					"schema": {
						"type":"boolean"
					}
				},
				{
					"name":"ssl_private_key_path",
					"required":false,
					"description":"The file path location of the SSL key",
					"schema":{
						"type":"string"
					}
				},
				{
					"name":"ssl_certificate_path",
					"required":false,
					"description":"The file path location of the certificate authority file.",
					"schema":{
						"type":"string"
					}
				},
				{
					"name":"ssl_allowed_fingerprints",
					"required":false,
					"description":"The SHA1 fingerprints accepted by the SSL certificate.",
					"schema":{
						"type":"array",
						"items": {
							"descripion":"An SHA1 fingerprint in `AB:CD:EF:GH:IJ:...` format",
							"type":"string"
						}
					}
				},
				{
					"name":"ssl_allow_any_cert",
					"required":false,
					"description":"If `true`, the wallet RPC will accept any incoming SSL certificate. If `false`, the certificate must be signed by a trusted certificate authority. (Default: `false`)",
					"schema":{
						"type":"boolean"
					}
				},
				{
					"name":"username",
					"required":false,
					"description":"Monero daemon's username credential",
					"schema":{
						"type":"string"
					}
				},
				{
					"name":"password",
					"required":false,
					"description":"Monero daemon's password credential",
					"schema":{
						"type":"string"
					}
				}
			],
			"result":{
				"name":"SetDaemonResult",
				"schema":{}
			},
			"examples": [
				{
					"name":"Connecting to http://node.monerodevs.org:18089",
					"description":"Example of requesting monero-wallet to connect to the monero daemon `http://node.monerodevs.org:18089`. The node is trusted and the ssl keys and certificates can be found at the supplied file paths",
					"params": [
						{
							"name":"address",
							"value":"http://node.monerodevs.org:18089"
						},
						{
							"name":"trusted",
							"value":true
						},
						{
							"name":"ssl_private_key_path",
							"value":"path/to/ssl/key"
						},
						{
							"name":"ssl_certificate_path",
							"value":"path/to/ssl/certificate"
						},
						{
							"name":"ssl_ca_file",
							"value":"path/to/ssl/ca/file"
						},
						{
							"name":"ssl_allowed_fingerprints",
							"value":["85:A7:68:29:BE:73:49:80:84:91:7A:BB:1F:F1:AD:7E:43:FE:CC:B8"]
						},
						{
							"name":"ssl_allow_any_cert",
							"value":true
						}
					],
					"result": {
						"name":"SetDaemonResultExample",
						"value": {}
					}
				},
				{
					"name":"Connecting to untrusted http://xmr-node-uk.cakewallet.com:18081 without SSL",
					"description":"Example of requesting monero-wallet to connect to the monero daemon `http://xmr-node-uk.cakewallet.com:18081`. The node is untrusted and no SSL keys are submitted",
					"params": [
						{
							"name":"address",
							"value":"http://xmr-node-uk.cakewallet.com:18081"
						}
					],
					"result": {
						"name":"SetDaemonResultExample",
						"value": {}
					}
				}
			]
		},
		{
			"name":"get_balance",
			"tags":[],
			"description":"Alias: `getbalance`\n\nReturn the requested account wallet's balance.",
			"paramStructure":"by-name",
			"params": [
				{
					"name":"account_index",
					"required":true,
					"description":"Account to which returning the balance from",
					"schema":{
						"type":"integer",
						"minimum":0
					}
				},
				{
					"name":"address_indices",
					"required":false,
					"description":"Return balance detail for those subaddresses.",
					"schema":{
						"type":"array",
						"items":{
							"type":"integer",
							"minimum":0
						}
					}
				},
				{
					"name":"all_acounts",
					"required":false,
					"description":"If set to `true`, monero-wallet-rpc will return balance detail of all accounts (Defaults to `false`)",
					"schema": {
						"type":"boolean"
					}
				},
				{
					"name":"strict",
					"required":false,
					"description":"If set to `true`, all changes go to 0-th subaddress, in the current subaddress account (Defaults to `false`)",
					"schema": {
						"type":"boolean"
					}
				}
			],
			"result":{
				"name":"GetBalanceResult",
				"schema":{
					"$ref":"#/components/schemas/GetBalanceResponse"
				}
			},
			"examples": [
				{
					"name":"Fetching primary account and first two subaddress",
					"description":"This example show how to fetch balance informations for the primary account of the wallet, and its two first subaddresses",
					"params":[
						{
							"name":"account_index",
							"value":0
						},
						{
							"name":"address_indices",
							"value":[0,1]
						}
					],
					"result":{
						"name":"GetBalanceResultExample",
						"value":{
							"balance": 157443303037455077,
    						"blocks_to_unlock": 0,
    						"multisig_import_needed": false,
    						"per_subaddress": [{
    							"account_index": 0,
    							"address": "55LTR8KniP4LQGJSPtbYDacR7dz8RBFnsfAKMaMuwUNYX6aQbBcovzDPyrQF9KXF9tVU6Xk3K8no1BywnJX6GvZX8yJsXvt",
    							"address_index": 0,
    							"balance": 157360317826255077,
    							"blocks_to_unlock": 0,
    							"label": "Primary account",
    							"num_unspent_outputs": 5281,
    							"time_to_unlock": 0,
    							"unlocked_balance": 157360317826255077
    						},
							{
    							"account_index": 0,
    							"address": "7BnERTpvL5MbCLtj5n9No7J5oE5hHiB3tVCK5cjSvCsYWD2WRJLFuWeKTLiXo5QJqt2ZwUaLy2Vh1Ad51K7FNgqcHgjW85o",
    							"address_index": 1,
    							"balance": 59985211200000,
    							"blocks_to_unlock": 0,
    							"label": "",
    							"num_unspent_outputs": 1,
    							"time_to_unlock": 0,
    							"unlocked_balance": 59985211200000
    						}],
    						"time_to_unlock": 0,
    						"unlocked_balance": 157443303037455077
						}
					}
				}
			]
		}
	]
}